<?php

namespace GD\AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;
use GD\AdminBundle\Entity\Merchant;

/**
 * OfferRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OfferRepository extends EntityRepository
{
    public function getActiveOffersByMerchant(Merchant $merchant)
    {
        $query = $this->getEntityManager()
            ->createQuery('SELECT o,m FROM GD\AdminBundle\Entity\Offer o JOIN o.merchant m WITH o.isCurrent = true AND o.isArchived = false AND o.endDate >= CURRENT_DATE() AND o.merchant = :merchant')
            ->setParameter('merchant', $merchant->getId());

        return $query->getResult();
    }

    public function getOffersByMerchantsList($listName, $type)
    {
        $query = 'SELECT o,m FROM GD\AdminBundle\Entity\Offer o JOIN o.merchant m WHERE o.isCurrent = true AND o.isArchived = false AND o.type = '.$type.' AND o.merchant IN (SELECT m1.id FROM GD\AdminBundle\Entity\MerchantList l JOIN l.merchants m1 WHERE l.name = \''.$listName.'\')';

        if ($type == \GD\AdminBundle\Entity\Offer::OFFER_TYPE_CASHBACK) {
            $query .= ' ORDER BY m.cashbackSortOrder ASC';
        } elseif ($type == \GD\AdminBundle\Entity\Offer::OFFER_TYPE_CODE_PROMO) {
            $query .= ' ORDER BY m.codepromoSortOrder ASC';
        }

        return $this->getEntityManager()
            ->createQuery($query)
            ->getResult()
        ;
    }
}
